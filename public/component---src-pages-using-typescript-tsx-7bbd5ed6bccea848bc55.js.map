{"version":3,"sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/Footer.js","webpack://gatsby-starter-default/./src/components/layout.js"],"names":["data","path","title","site","buildTime","href","to","Header","props","handleScroll","event","window","pageYOffset","setState","hasScrolled","state","componentDidMount","addEventListener","this","render","className","src","alt","fill","width","React","defaultProps","siteTitle","FooterGroup","styled","Text","Button","LinkGroup","Copyright","children","allContentfulLink","edges","map","edge","node","url"],"mappings":"iMAyCA,UA5BwD,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,qEAC2C,sCAD3C,+DAE8C,yCAF9C,wEAKA,qEAC2C,wCAD3C,oBAEM,wCAFN,gBAEsC,uCAFtC,UAIA,2DACiCD,EADjC,uBAC2D,IACxDD,EAAKG,KAAKC,UAFb,KAIA,2DACkC,IAChC,qBAAGC,KAAK,6CAAR,kCAFF,KAOA,gBAAC,KAAD,CAAMC,GAAG,KAAT,8B,oGC9BEC,E,YAEJ,WAAaC,GAAQ,IAAD,SAClB,cAAMA,IAAN,MAYFC,aAAe,SAACC,GACIC,OAAOC,YACT,GACd,EAAKC,SAAU,CAAEC,aAAa,IAE9B,EAAKD,SAAU,CAAEC,aAAa,KAfhC,EAAKC,MAAQ,CACXD,aAAa,GAJG,G,uCAQpBE,kBAAA,WACEL,OAAOM,iBAAiB,SACxBC,KAAKT,e,EAePU,OAAA,WACE,OACE,uBAAKC,UAAWF,KAAKH,MAAMD,YAAc,sBAAwB,UAEjE,uBAAKM,UAAU,eAEb,gBAAC,KAAD,CAAMd,GAAG,KAAT,IAAc,uBAAKe,IAAI,8CAA+CC,IAAI,GAAIC,KAAK,QAAQC,MAAM,OAAjG,KACA,gBAAC,KAAD,CAAMlB,GAAG,YAAT,WACA,gBAAC,KAAD,CAAMA,GAAG,cAAT,aACA,gBAAC,KAAD,CAAMA,GAAG,cAAT,aACA,gBAAC,KAAD,CAAMA,GAAG,QAAO,yC,GArCHmB,aAmDrBlB,EAAOmB,aAAe,CACpBC,UAAU,IAGZ,I,UAAA,I,iBC3DMC,EAAcC,SAAH,iHAMXC,EAAOD,OAAH,sIAOJE,EAASF,YAAH,ieAiBNG,EAAYH,SAAH,oPAgBTI,EAAYJ,SAAH,+GAkBf,EAXe,SAAC,GAAD,IAAE7B,EAAF,EAAEA,KAAMkC,EAAR,EAAQA,SAAR,OACX,gBAACN,EAAD,KACE,gBAACE,EAAD,sFACA,gBAACC,EAAD,cACA,gBAACC,EAAD,KAAYhC,EAAKmC,kBAAkBC,MAAMC,KAAI,SAAAC,GAAI,OAC/C,qBAAGjC,KAAMiC,EAAKC,KAAKC,KAAMF,EAAKC,KAAKrC,WAErC,gBAAC+B,EAAD,KAAYC,KCxClB,EAde,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAUlC,EAAb,EAAaA,KAAb,OACb,2BACE,gBAAC,EAAD,MACCkC,IACD,gBAAC,EAAD,CAAQlC,KAAMA,GAAd,mEACkE,qBAAGK,KAAK,gCAAR,YADlE,+B","file":"component---src-pages-using-typescript-tsx-7bbd5ed6bccea848bc55.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\nimport './Header.css'\n\n\n\nclass Header extends React.Component {\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      hasScrolled: false\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll',\n    this.handleScroll)\n  }\n\n  handleScroll = (event) => {\n    const ScrollTop = window.pageYOffset\n    if (ScrollTop > 50) {\n      this.setState ({ hasScrolled: true})\n    } else {\n      this.setState ({ hasScrolled: false})\n    }\n    \n  }\n\n\n\n  render() {\n    return (\n      <div className={this.state.hasScrolled ? 'Header HeaderScroll' : 'Header'}>\n  \n      <div className=\"HeaderGroup\">\n    \n        <Link to=\"/\"> <img src=\"https://designcode.io/images/logos/logo.svg\"  alt=\"\"  fill=\"white\" width=\"50\" /> </Link>\n        <Link to=\"/courses\">Courses</Link>\n        <Link to=\"/downloads\">Downloads</Link>\n        <Link to=\"/workshops\">Workshops</Link>\n        <Link to=\"/buy\"><button>Buy</button></Link>\n      \n      </div>\n      \n    \n    </div>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst FooterGroup = styled.div`\n    background: #F1F3F5;\n    padding: 50px 0;\n    display: grid;\n    grid-gap: 20px;\n`\nconst Text = styled.p`\n    font-size: 24px;\n    font-weight: 600;\n    color: #486791;\n    max-width: 500px;\n    margin: 0 auto;\n`\nconst Button = styled.button`\n    background: linear-gradient(102.24deg, #9B51E0 0%, #3436E7 100%);\n    box-shadow: 0px 10px 20px rgba(101, 41, 255, 0.15);\n    border-radius: 30px;\n    color: white;\n    border: none;\n    padding: 16px 60px;\n    font-weight: 600;\n    font-size: 24px;\n    justify-self: center;\n    transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\n\n    &:hover {\n        box-shadow: 0 20px 40px rgba(0,0,0, 0.15);\n        transform: translateY(-3px);\n    }\n`\nconst LinkGroup = styled.div`\n    width: 500px;\n    margin: 50px auto;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 10px;\n\n    a {\n        transition: 0.8s;\n    }\n\n    a:hover {\n        color: black;\n    }\n`\n\nconst Copyright = styled.div`\n    color: #486791;\n    max-width: 500px;\n    margin: 0 auto;\n    padding: 0 20px;\n`\n\nconst Footer = ({data, children}) => (\n    <FooterGroup>\n      <Text>Tweet “Prototype and build apps with React and Swift. New courses by @MengTo”</Text>\n      <Button>Tweet</Button>\n      <LinkGroup>{data.allContentfulLink.edges.map(edge => (\n        <a href={edge.node.url}>{edge.node.title}</a>\n      ))}</LinkGroup>\n      <Copyright>{children}</Copyright>\n    </FooterGroup>\n)\n\nexport default Footer","import React from 'react'\nimport PropTypes from 'prop-types'\n// import Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\n\nimport Header from '../components/header'\nimport './layout.css'\nimport Footer from '../components/Footer';\n\nconst Layout = ({ children, data }) => (\n  <div>\n    <Header />\n    {children()}\n    <Footer data={data}>\n      Backgrounds made in Cinema 4D, iOS app in Swift, site in React. <a href=\"mailto:support@designcode.io\">Email us</a> to ask anything. © 2018\n    </Footer>\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.func,\n}\n\nexport default Layout\n\nexport const query = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        keywords\n      }\n    }\n    allContentfulLink(sort: { fields: [createdAt], order: ASC }) {\n      edges {\n        node {\n          title\n          url\n          createdAt\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}